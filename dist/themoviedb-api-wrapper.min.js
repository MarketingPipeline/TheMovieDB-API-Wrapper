/**!
 * @license TheMovieDB-API-Wrapper.js - v1.0.0
 * A JavaScript library for easily fetching info from TheMovieDataBase API. 
 * LICENSED UNDER MIT LICENSE
 * MORE INFO CAN BE FOUND AT https://github.com/MarketingPipeline/TheMovieDB-API-Wrapper.js/
 */ import e from"https://cdn.skypack.dev/torrent-name-parser@0.6.5";let DEBUG_Wrapper=!1;function DEBUGGER(e){!0===DEBUG_Wrapper&&console.log(e)}let TheMovieDB_Wrapper_APIKey=null;function TheMovieDB_Wrapper(r,o,t,i,s){return new Promise(a=>{function n(e){return{tmdb_api_error:e}}if(null===TheMovieDB_Wrapper_APIKey)return DEBUGGER("Error -  TheMovieDB API Key Not Provided"),a(n("TheMovieDB API Key Not Provided"));if(!r)return DEBUGGER("Error -  Query Name Not Provided"),a(n("Query Name Not Provided"));if(!o)return DEBUGGER("Error -  Query Type Not Provided"),a(n("Query Type Not Provided"));if("movie"!=o.toLowerCase()&&"tv"!=o.toLowerCase()&&"reviews"!=o.toLowerCase()&&"similar"!=o.toLowerCase()&&"episode"!=o.toLowerCase()&&"actor"!=o.toLowerCase()&&"collection"!=o.toLowerCase())return DEBUGGER("Error -  Query Type Not Valid"),a(n("Query Type Not Valid"));if(void 0!=r){let u=e(r).title,d="";e(r).year&&(d=`&year=${e(r).year}`);let p=!1,E=!1,l=!1;if("actor"===o.toLowerCase()&&(o="person"),"collection"===o.toLowerCase()&&(o="collection"),"similar"===o.toLowerCase()){if(!t)return DEBUGGER("Error - Query Type Is Not Provided"),a(n("Query Type Is Not Provided"));if("tv"!=t.toLowerCase()&&"movie"!=t.toLowerCase())return DEBUGGER("Error - Query Type Is Not Provided, Must Be TV or Movie"),a(n("Query Type Is Not Valid"));o=t,E=!0}if("reviews"===o.toLowerCase()){if(!t)return DEBUGGER("Error - Query Type Is Not Provided"),a(n("Query Type Is Not Provided"));if("movie"!=t.toLowerCase()&&"tv"!=t.toLowerCase())return DEBUGGER("Error - Query Type Is Not Provided, Must Be TV or Movie"),a(n("Query Type Is Not Valid"));o=t,l=!0}if("episode"===o.toLowerCase()){if(o="tv",p=!0,!i){if(!e(r).season)return DEBUGGER("Error - Season Number Not Provided or Found"),a(n("Season Number Not Provided or Found"));i=e(r).season}if(!s){if(!e(r).episode)return DEBUGGER("Error - Episode Number Not Provided or Found"),a(n("Episode Number Not Provided or Found"));s=e(r).episode}}DEBUGGER(`Searching for ${u}, Year: ${d}, Type: ${o}`);let y=[],G=[];async function f(e){try{let r=await fetch(e,{mode:"cors"});if(r.ok){let o=await r.json();return o}{let t=await r.json();return DEBUGGER(`Error - ${t.status_message}`),a(n(t.status_message))}}catch(i){return DEBUGGER(`Error - ${i.message}`),a(n(i.message))}}f(`https://api.themoviedb.org/3/search/${o}?api_key=${TheMovieDB_Wrapper_APIKey}&language=en-US&query=${u}${d}`).then(function(e){if(0===e.total_results)return DEBUGGER(`No results found for ${r}`),a(n("No results found"));{if("collection"===o.toLowerCase()||"person"===o.toLowerCase())return a(e.results);DEBUGGER(`Found a ID For ${u}`);let d=e.results[0].id,v="";!0===p&&(v=`/season/${i}/episode/${s}`),!0===E&&(v="/similar"),!0===l&&(v="/reviews");let c=`https://api.themoviedb.org/3/${o}/${d}${v}?&api_key=${TheMovieDB_Wrapper_APIKey}`;f(c).then(function(e){if(console.log(c),DEBUGGER(`Success - Found info for ${u} using ID: ${d}`),y.push(e),!0===E||!0===l)return 0===e.total_results?(DEBUGGER(`No results found for ${r}`),a(n("No results found"))):a(e);f(`https://api.themoviedb.org/3/${o}/${d}/credits?&api_key=${TheMovieDB_Wrapper_APIKey}`).then(function(e){DEBUGGER(`Attempting To Find Actors For ${u}`);let r=0;if(t||(t=5),0!=e.cast.length)for(DEBUGGER(`Actors / Cast Were Found For ${u}`);r!=t;)G.push(e.cast[r]),r+=1;else G.push({actors:null}),DEBUGGER(`No Actors / Cast Were Found For ${u}`);return a([y,G])})})}})}})}export function tmdb_api_key(e){TheMovieDB_Wrapper_APIKey=e}export async function fetch_tmdb_info(e,r,o,t,i){let s=await TheMovieDB_Wrapper(e,r,o,t,i);return s}
